global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000 # ms
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend python_front
    bind *:80
    mode http
    default_backend python_back
     # Kiểm tra domain
    acl is_khe hdr(host) -i py.khene.local
    use_backend python_back if is_khe

    acl haproxy_stats hdr(host) -i stats.khene.local
    use_backend haproxy_stats_backend if haproxy_stats

    acl web_khe hdr(host) -i web.khene.local
    use_backend python_web if web_khe


    default_backend reject_all   # Nếu không đúng domain, trả lỗi

backend python_back
    mode http
    balance roundrobin
    option httpchk GET /
    server srv1 192.168.0.10:8000 check weight 5
    server srv2 192.168.0.10:8001 check weight 1

backend haproxy_stats_backend
    balance roundrobin
    server stats 127.0.0.1:8404 check


backend python_web
    mode http
    balance roundrobin
    cookie SERVERID insert indirect nocache
    option httpchk GET /
    #server web1 127.0.0.1:5000 check 
    #server web2 127.0.0.1:5001 check
    server web1 127.0.0.1:5000 check inter 10s fall 3 rise 2 cookie web1
    server web2 127.0.0.1:5001 check inter 10s fall 3 rise 2 cookie web2


backend reject_all
    mode http
    errorfile 503 /etc/haproxy/errors/503.http

listen stats
    bind 127.0.0.1:8404
    mode http
    stats enable
    stats uri /haproxy?stats
    stats refresh 5s
    stats auth admin:123456




