{"architecture":"amd64","config":{"Env":["PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","LANG=C.UTF-8","GPG_KEY=A035C8C19219BA821ECEA86B64E628F8D684696D","PYTHON_VERSION=3.11.13","PYTHON_SHA256=8fb5f9fbc7609fa822cb31549884575db7fd9657cbffb89510b5d7975963a83a"],"Cmd":["python","app.py"],"WorkingDir":"/app","ArgsEscaped":true},"created":"2025-09-15T21:41:54.35401173+07:00","history":[{"created":"2025-08-08T18:20:34Z","created_by":"# debian.sh --arch 'amd64' out/ 'trixie' '@1757289600'","comment":"debuerreotype 0.16"},{"created":"2025-08-08T18:20:34Z","created_by":"ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2025-08-08T18:20:34Z","created_by":"ENV LANG=C.UTF-8","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2025-08-08T18:20:34Z","created_by":"RUN /bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tnetbase \t\ttzdata \t; \tapt-get dist-clean # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2025-08-08T18:20:34Z","created_by":"ENV GPG_KEY=A035C8C19219BA821ECEA86B64E628F8D684696D","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2025-08-08T18:20:34Z","created_by":"ENV PYTHON_VERSION=3.11.13","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2025-08-08T18:20:34Z","created_by":"ENV PYTHON_SHA256=8fb5f9fbc7609fa822cb31549884575db7fd9657cbffb89510b5d7975963a83a","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2025-08-08T18:20:34Z","created_by":"RUN /bin/sh -c set -eux; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tgnupg \t\tlibbluetooth-dev \t\tlibbz2-dev \t\tlibc6-dev \t\tlibdb-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttk-dev \t\tuuid-dev \t\twget \t\txz-utils \t\tzlib1g-dev \t; \t\twget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"; \techo \"$PYTHON_SHA256 *python.tar.xz\" | sha256sum -c -; \twget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"; \tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$GPG_KEY\"; \tgpg --batch --verify python.tar.xz.asc python.tar.xz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" python.tar.xz.asc; \tmkdir -p /usr/src/python; \ttar --extract --directory /usr/src/python --strip-components=1 --file python.tar.xz; \trm python.tar.xz; \t\tcd /usr/src/python; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-optimizations \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t$(test \"${gnuArch%%-*}\" != 'riscv64' \u0026\u0026 echo '--with-lto') \t\t--with-ensurepip \t; \tnproc=\"$(nproc)\"; \tEXTRA_CFLAGS=\"$(dpkg-buildflags --get CFLAGS)\"; \tLDFLAGS=\"$(dpkg-buildflags --get LDFLAGS)\"; \tLDFLAGS=\"${LDFLAGS:--Wl},--strip-all\"; \tmake -j \"$nproc\" \t\t\"EXTRA_CFLAGS=${EXTRA_CFLAGS:-}\" \t\t\"LDFLAGS=${LDFLAGS:-}\" \t; \trm python; \tmake -j \"$nproc\" \t\t\"EXTRA_CFLAGS=${EXTRA_CFLAGS:-}\" \t\t\"LDFLAGS=${LDFLAGS:--Wl},-rpath='\\$\\$ORIGIN/../lib'\" \t\tpython \t; \tmake install; \t\tcd /; \trm -rf /usr/src/python; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name 'libpython*.a' \\) \\) \t\t\\) -exec rm -rf '{}' + \t; \t\tldconfig; \t\tapt-mark auto '.*' \u003e /dev/null; \tapt-mark manual $savedAptMark; \tfind /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=\u003e/ { so = $(NF-1); if (index(so, \"/usr/local/\") == 1) { next }; gsub(\"^/(usr/)?\", \"\", so); printf \"*%s\\n\", so }' \t\t| sort -u \t\t| xargs -rt dpkg-query --search \t\t| awk 'sub(\":$\", \"\", $1) { print $1 }' \t\t| sort -u \t\t| xargs -r apt-mark manual \t; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \tapt-get dist-clean; \t\texport PYTHONDONTWRITEBYTECODE=1; \tpython3 --version; \t\tpip3 install \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t--no-compile \t\t'setuptools==65.5.1' \t\t'wheel\u003c0.46' \t; \tpip3 --version # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2025-08-08T18:20:34Z","created_by":"RUN /bin/sh -c set -eux; \tfor src in idle3 pip3 pydoc3 python3 python3-config; do \t\tdst=\"$(echo \"$src\" | tr -d 3)\"; \t\t[ -s \"/usr/local/bin/$src\" ]; \t\t[ ! -e \"/usr/local/bin/$dst\" ]; \t\tln -svT \"$src\" \"/usr/local/bin/$dst\"; \tdone # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2025-08-08T18:20:34Z","created_by":"CMD [\"python3\"]","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2025-09-14T12:06:06.078577484+07:00","created_by":"WORKDIR /app","comment":"buildkit.dockerfile.v0"},{"created":"2025-09-14T12:06:06.185853397+07:00","created_by":"COPY requirements.txt . # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2025-09-14T12:06:24.463793328+07:00","created_by":"RUN /bin/sh -c pip install -r requirements.txt # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2025-09-15T21:41:54.35401173+07:00","created_by":"COPY . . # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2025-09-15T21:41:54.35401173+07:00","created_by":"CMD [\"python\" \"app.py\"]","comment":"buildkit.dockerfile.v0","empty_layer":true}],"os":"linux","rootfs":{"type":"layers","diff_ids":["sha256:daf557c4f08e0cb77b2af2a08d8bca4f333cf408d88191911715e6f393eca215","sha256:135aac4d5c9a28e62cb0111859af91c76d340374660138c0e96eb4f7ffaa832f","sha256:49dd736005c75b6cc3d3dfe2d3b47abdcd6981d443de33c0ff3171559ac42f3c","sha256:8d441cbfbc35717d173dbbe375fc7097825d109d8de90d24e5f51dbbd24f7895","sha256:6d7b6a0461145eb813bb29977d5f23ca409cf7517b111fa4f3e11198d6e348f0","sha256:1da02758f94488fe87584dabcc91b1a6cc30f2bac5daf123f7e58223631f1f83","sha256:2c324d912e8cd303dacefcff5643f4d5ddbfb7bcf6d90162e23d0b2fd4674912","sha256:6f6a608bafcaf7ac81b278d2b729af1c0f95eb28df6def0b5f006b19c7bfaa85"]}}